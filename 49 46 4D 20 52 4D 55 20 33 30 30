[
    {
        "id": "9548bf3862124184",
        "type": "group",
        "z": "e3c9aea0482e38ad",
        "name": "IFM RMU 300",
        "style": {
            "label": true
        },
        "nodes": [
            "b7635c1b1b009c75",
            "7acc2fe7952f7edc",
            "d5d2113448ffceed",
            "cfa9bbe7a1e39929",
            "d41057a2c7c7d36f",
            "da0e827232fe89c5",
            "8552cea4a1af67c4",
            "d8e0a59ae36ff99d",
            "08cf974c219560be",
            "9b3028632bd82e44",
            "a87ec19ad7bd7dc7",
            "0cc058b921cecf51"
        ],
        "x": 34,
        "y": 439,
        "w": 1552,
        "h": 162
    },
    {
        "id": "b7635c1b1b009c75",
        "type": "function",
        "z": "e3c9aea0482e38ad",
        "g": "9548bf3862124184",
        "name": "Drehwertgeber",
        "func": "let speed = msg.payload.speed;\nlet speed_scale = msg.payload.speed_scale;\n\nlet counter = msg.payload.counter;\nlet counter_scale = msg.payload.counter_scale;\n\n// Überprüfen, ob speed und counter definiert sind\nif (speed === undefined) {\n    speed = 0.00;\n    node.warn(\"Speed = 0.00\");\n}\n\nif (counter === undefined) {\n    counter = 0.00;\n    node.warn(\"Counter = 0.00\");\n}\n\n// Calculation\nspeed = speed * Math.pow(10, speed_scale);\ncounter = counter * Math.pow(10, counter_scale);\n\n// Return\nmsg.payload.speed = speed;\nmsg.payload.counter = counter;\n\nreturn msg; // Rückgabe des gesamten msg-Objekts\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 480,
        "wires": [
            [
                "da0e827232fe89c5",
                "8b5792eb8f6aa59d",
                "0cc058b921cecf51"
            ]
        ]
    },
    {
        "id": "7acc2fe7952f7edc",
        "type": "http request",
        "z": "e3c9aea0482e38ad",
        "g": "9548bf3862124184",
        "name": "Analyse Sensordaten",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://169.254.218.116/iolinkmaster/port[7]/iolinkdevice/pdin/getdata",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 380,
        "y": 480,
        "wires": [
            [
                "cfa9bbe7a1e39929"
            ]
        ]
    },
    {
        "id": "d5d2113448ffceed",
        "type": "inject",
        "z": "e3c9aea0482e38ad",
        "d": true,
        "g": "9548bf3862124184",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 480,
        "wires": [
            [
                "7acc2fe7952f7edc"
            ]
        ]
    },
    {
        "id": "cfa9bbe7a1e39929",
        "type": "function",
        "z": "e3c9aea0482e38ad",
        "g": "9548bf3862124184",
        "name": "function 113",
        "func": "// Überprüfen, ob die empfangenen Daten als String vorliegen\nif (typeof msg.payload.data.value === 'string') {\n    // Konvertiere den HEX-String in einen Buffer\n    msg.payload = Buffer.from(msg.payload.data.value, 'hex');\n} else {\n    node.error(\"data is not a string or not properly formatted\");\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 480,
        "wires": [
            [
                "d41057a2c7c7d36f"
            ]
        ]
    },
    {
        "id": "d41057a2c7c7d36f",
        "type": "buffer-parser",
        "z": "e3c9aea0482e38ad",
        "g": "9548bf3862124184",
        "name": "Analyse Sensordaten",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int32be",
                "name": "counter",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "int8",
                "name": "counter_scale",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "bool",
                "name": "aux",
                "offset": 5,
                "length": 1,
                "offsetbit": 3,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "bool",
                "name": "ssc13",
                "offset": 5,
                "length": 1,
                "offsetbit": 2,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "bool",
                "name": "ssc12",
                "offset": 5,
                "length": 1,
                "offsetbit": 1,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "bool",
                "name": "ssc11",
                "offset": 5,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "int32be",
                "name": "speed",
                "offset": 6,
                "length": 1,
                "offsetbit": 1,
                "scale": "0.1",
                "mask": ""
            },
            {
                "type": "int8",
                "name": "speed_scale",
                "offset": 10,
                "length": 1,
                "offsetbit": 1,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "uint8",
                "name": "status",
                "offset": 11,
                "length": 1,
                "offsetbit": 1,
                "scale": "1",
                "mask": "0xF0"
            },
            {
                "type": "bool",
                "name": "ssc22",
                "offset": 11,
                "length": 1,
                "offsetbit": 1,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "bool",
                "name": "ssc21",
                "offset": 11,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 820,
        "y": 480,
        "wires": [
            [
                "b7635c1b1b009c75"
            ]
        ]
    },
    {
        "id": "da0e827232fe89c5",
        "type": "debug",
        "z": "e3c9aea0482e38ad",
        "g": "9548bf3862124184",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 560,
        "wires": []
    },
    {
        "id": "8552cea4a1af67c4",
        "type": "ui_chart",
        "z": "e3c9aea0482e38ad",
        "g": "9548bf3862124184",
        "name": "",
        "group": "e3534eb4b208babe",
        "order": 1,
        "width": 14,
        "height": 8,
        "label": "Speed",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1510,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "d8e0a59ae36ff99d",
        "type": "debug",
        "z": "e3c9aea0482e38ad",
        "d": true,
        "g": "9548bf3862124184",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 560,
        "wires": []
    },
    {
        "id": "08cf974c219560be",
        "type": "function",
        "z": "e3c9aea0482e38ad",
        "d": true,
        "g": "9548bf3862124184",
        "name": "function 116",
        "func": "let date = new Date();\nlet dateString = date.toISOString().split('T')[0]; // Format: YYYY-MM-DD\n\n// Beispielwerte für Distance und Timestamp\nlet speedValue = msg.payload.speed; // Setze hier den tatsächlichen Wert für Distance ein\nlet timestamp = new Date().toLocaleString(); // Konvertiere in lesbares Datumsformat\nlet counterValue = msg.payload.counter;\n\nvar data = [\n { time: timestamp, drehwertgeber_speed: speedValue, drehwertgeber_counter: counterValue }\n];\n\n// Datenarray erstellen\nmsg.payload = data\n\n// Datei-Pfad festlegen\nmsg.filename = \"C:\\\\Users\\\\danyal.erguer\\\\Desktop\\\\Test\\\\\" + dateString + \"-Sensor-Daten.csv\"; // Datei auswählen, shift + rechte Maustaste pfad kopieren\n\nreturn { payload: msg.payload, filename: msg.filename }; // Es müssen die Richtigen Eigenschaften zurück gegebne werden sprich payload und filename\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 560,
        "wires": [
            [
                "a87ec19ad7bd7dc7"
            ]
        ]
    },
    {
        "id": "9b3028632bd82e44",
        "type": "file",
        "z": "e3c9aea0482e38ad",
        "d": true,
        "g": "9548bf3862124184",
        "name": "file path",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 400,
        "y": 560,
        "wires": [
            [
                "d8e0a59ae36ff99d"
            ]
        ]
    },
    {
        "id": "a87ec19ad7bd7dc7",
        "type": "csv",
        "z": "e3c9aea0482e38ad",
        "d": true,
        "g": "9548bf3862124184",
        "name": "",
        "spec": "rfc",
        "sep": ",",
        "hdrin": true,
        "hdrout": "once",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "time,distance,drehwertgeber_counter,drehwertgeber_speed",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": true,
        "x": 270,
        "y": 560,
        "wires": [
            [
                "9b3028632bd82e44"
            ]
        ]
    },
    {
        "id": "0cc058b921cecf51",
        "type": "function",
        "z": "e3c9aea0482e38ad",
        "g": "9548bf3862124184",
        "name": "function 122",
        "func": "msg.payload = msg.payload.speed;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 560,
        "wires": [
            [
                "8552cea4a1af67c4"
            ]
        ]
    },
    {
        "id": "e3534eb4b208babe",
        "type": "ui_group",
        "name": "Drehzahl",
        "tab": "3c13dd5f302b75de",
        "order": 2,
        "disp": true,
        "width": 14,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3c13dd5f302b75de",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]
